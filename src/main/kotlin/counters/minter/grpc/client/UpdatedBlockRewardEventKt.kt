//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: events.proto

package counters.minter.grpc.client;

@kotlin.jvm.JvmName("-initializeupdatedBlockRewardEvent")
public inline fun updatedBlockRewardEvent(block: counters.minter.grpc.client.UpdatedBlockRewardEventKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.UpdatedBlockRewardEvent =
  counters.minter.grpc.client.UpdatedBlockRewardEventKt.Dsl._create(counters.minter.grpc.client.UpdatedBlockRewardEvent.newBuilder()).apply { block() }._build()
public object UpdatedBlockRewardEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: counters.minter.grpc.client.UpdatedBlockRewardEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: counters.minter.grpc.client.UpdatedBlockRewardEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): counters.minter.grpc.client.UpdatedBlockRewardEvent = _builder.build()

    /**
     * <code>string value = 1;</code>
     */
    public var value: kotlin.String
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * <code>string value = 1;</code>
     */
    public fun clearValue() {
      _builder.clearValue()
    }

    /**
     * <code>string value_locked_stake_rewards = 2;</code>
     */
    public var valueLockedStakeRewards: kotlin.String
      @JvmName("getValueLockedStakeRewards")
      get() = _builder.getValueLockedStakeRewards()
      @JvmName("setValueLockedStakeRewards")
      set(value) {
        _builder.setValueLockedStakeRewards(value)
      }
    /**
     * <code>string value_locked_stake_rewards = 2;</code>
     */
    public fun clearValueLockedStakeRewards() {
      _builder.clearValueLockedStakeRewards()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun counters.minter.grpc.client.UpdatedBlockRewardEvent.copy(block: counters.minter.grpc.client.UpdatedBlockRewardEventKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.UpdatedBlockRewardEvent =
  counters.minter.grpc.client.UpdatedBlockRewardEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

