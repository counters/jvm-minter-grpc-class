//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package counters.minter.grpc.client;

@kotlin.jvm.JvmSynthetic
public inline fun swapPoolsResponse(block: counters.minter.grpc.client.SwapPoolsResponseKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse =
  counters.minter.grpc.client.SwapPoolsResponseKt.Dsl._create(counters.minter.grpc.client.SwapPoolsResponse.newBuilder()).apply { block() }._build()
public object SwapPoolsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: counters.minter.grpc.client.SwapPoolsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: counters.minter.grpc.client.SwapPoolsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): counters.minter.grpc.client.SwapPoolsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PoolsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     */
     public val pools: com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPoolsList()
      )
    /**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     * @param value The pools to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPools")
    public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.add(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool) {
      _builder.addPools(value)
    }/**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     * @param value The pools to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPools")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.plusAssign(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool) {
      add(value)
    }/**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     * @param values The pools to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPools")
    public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.addAll(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool>) {
      _builder.addAllPools(values)
    }/**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     * @param values The pools to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPools")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.plusAssign(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool>) {
      addAll(values)
    }/**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     * @param index The index to set the value at.
     * @param value The pools to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPools")
    public operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.set(index: kotlin.Int, value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool) {
      _builder.setPools(index, value)
    }/**
     * <code>repeated .api_pb.SwapPoolsResponse.SwapPool pools = 1 [json_name = "pools"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPools")
    public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool, PoolsProxy>.clear() {
      _builder.clearPools()
    }}
  @kotlin.jvm.JvmSynthetic
  public inline fun swapPool(block: counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse.SwapPool =
    counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.Dsl._create(counters.minter.grpc.client.SwapPoolsResponse.SwapPool.newBuilder()).apply { block() }._build()
  public object SwapPoolKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): counters.minter.grpc.client.SwapPoolsResponse.SwapPool = _builder.build()

      /**
       * <code>uint64 id = 5 [json_name = "id"];</code>
       */
      public var id: kotlin.Long
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>uint64 id = 5 [json_name = "id"];</code>
       */
      public fun clearId() {
        _builder.clearId()
      }

      /**
       * <code>string price = 4 [json_name = "price"];</code>
       */
      public var price: kotlin.String
        @JvmName("getPrice")
        get() = _builder.getPrice()
        @JvmName("setPrice")
        set(value) {
          _builder.setPrice(value)
        }
      /**
       * <code>string price = 4 [json_name = "price"];</code>
       */
      public fun clearPrice() {
        _builder.clearPrice()
      }

      /**
       * <code>uint64 coin0 = 6 [json_name = "coin0"];</code>
       */
      public var coin0: kotlin.Long
        @JvmName("getCoin0")
        get() = _builder.getCoin0()
        @JvmName("setCoin0")
        set(value) {
          _builder.setCoin0(value)
        }
      /**
       * <code>uint64 coin0 = 6 [json_name = "coin0"];</code>
       */
      public fun clearCoin0() {
        _builder.clearCoin0()
      }

      /**
       * <code>uint64 coin1 = 7 [json_name = "coin1"];</code>
       */
      public var coin1: kotlin.Long
        @JvmName("getCoin1")
        get() = _builder.getCoin1()
        @JvmName("setCoin1")
        set(value) {
          _builder.setCoin1(value)
        }
      /**
       * <code>uint64 coin1 = 7 [json_name = "coin1"];</code>
       */
      public fun clearCoin1() {
        _builder.clearCoin1()
      }

      /**
       * <code>string amount0 = 1 [json_name = "amount0"];</code>
       */
      public var amount0: kotlin.String
        @JvmName("getAmount0")
        get() = _builder.getAmount0()
        @JvmName("setAmount0")
        set(value) {
          _builder.setAmount0(value)
        }
      /**
       * <code>string amount0 = 1 [json_name = "amount0"];</code>
       */
      public fun clearAmount0() {
        _builder.clearAmount0()
      }

      /**
       * <code>string amount1 = 2 [json_name = "amount1"];</code>
       */
      public var amount1: kotlin.String
        @JvmName("getAmount1")
        get() = _builder.getAmount1()
        @JvmName("setAmount1")
        set(value) {
          _builder.setAmount1(value)
        }
      /**
       * <code>string amount1 = 2 [json_name = "amount1"];</code>
       */
      public fun clearAmount1() {
        _builder.clearAmount1()
      }

      /**
       * <code>string liquidity = 3 [json_name = "liquidity"];</code>
       */
      public var liquidity: kotlin.String
        @JvmName("getLiquidity")
        get() = _builder.getLiquidity()
        @JvmName("setLiquidity")
        set(value) {
          _builder.setLiquidity(value)
        }
      /**
       * <code>string liquidity = 3 [json_name = "liquidity"];</code>
       */
      public fun clearLiquidity() {
        _builder.clearLiquidity()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class OrdersSellProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       */
       public val ordersSell: com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getOrdersSellList()
        )
      /**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       * @param value The ordersSell to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addOrdersSell")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.add(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        _builder.addOrdersSell(value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       * @param value The ordersSell to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignOrdersSell")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.plusAssign(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        add(value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       * @param values The ordersSell to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllOrdersSell")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.addAll(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder>) {
        _builder.addAllOrdersSell(values)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       * @param values The ordersSell to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllOrdersSell")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.plusAssign(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder>) {
        addAll(values)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       * @param index The index to set the value at.
       * @param value The ordersSell to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setOrdersSell")
      public operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.set(index: kotlin.Int, value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        _builder.setOrdersSell(index, value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_sell = 8 [json_name = "ordersSell"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearOrdersSell")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersSellProxy>.clear() {
        _builder.clearOrdersSell()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class OrdersBuyProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       */
       public val ordersBuy: com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getOrdersBuyList()
        )
      /**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       * @param value The ordersBuy to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addOrdersBuy")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.add(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        _builder.addOrdersBuy(value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       * @param value The ordersBuy to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignOrdersBuy")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.plusAssign(value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        add(value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       * @param values The ordersBuy to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllOrdersBuy")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.addAll(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder>) {
        _builder.addAllOrdersBuy(values)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       * @param values The ordersBuy to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllOrdersBuy")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.plusAssign(values: kotlin.collections.Iterable<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder>) {
        addAll(values)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       * @param index The index to set the value at.
       * @param value The ordersBuy to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setOrdersBuy")
      public operator fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.set(index: kotlin.Int, value: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder) {
        _builder.setOrdersBuy(index, value)
      }/**
       * <code>repeated .api_pb.SwapPoolsResponse.SwapPool.LimitOrder orders_buy = 9 [json_name = "ordersBuy"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearOrdersBuy")
      public fun com.google.protobuf.kotlin.DslList<counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder, OrdersBuyProxy>.clear() {
        _builder.clearOrdersBuy()
      }}
    @kotlin.jvm.JvmSynthetic
    public inline fun limitOrder(block: counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.LimitOrderKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder =
      counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.LimitOrderKt.Dsl._create(counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder.newBuilder()).apply { block() }._build()
    public object LimitOrderKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder = _builder.build()

        /**
         * <code>uint64 id = 7 [json_name = "id"];</code>
         */
        public var id: kotlin.Long
          @JvmName("getId")
          get() = _builder.getId()
          @JvmName("setId")
          set(value) {
            _builder.setId(value)
          }
        /**
         * <code>uint64 id = 7 [json_name = "id"];</code>
         */
        public fun clearId() {
          _builder.clearId()
        }

        /**
         * <code>string want_sell = 3 [json_name = "wantSell"];</code>
         */
        public var wantSell: kotlin.String
          @JvmName("getWantSell")
          get() = _builder.getWantSell()
          @JvmName("setWantSell")
          set(value) {
            _builder.setWantSell(value)
          }
        /**
         * <code>string want_sell = 3 [json_name = "wantSell"];</code>
         */
        public fun clearWantSell() {
          _builder.clearWantSell()
        }

        /**
         * <code>string want_buy = 4 [json_name = "wantBuy"];</code>
         */
        public var wantBuy: kotlin.String
          @JvmName("getWantBuy")
          get() = _builder.getWantBuy()
          @JvmName("setWantBuy")
          set(value) {
            _builder.setWantBuy(value)
          }
        /**
         * <code>string want_buy = 4 [json_name = "wantBuy"];</code>
         */
        public fun clearWantBuy() {
          _builder.clearWantBuy()
        }

        /**
         * <code>string price = 8 [json_name = "price"];</code>
         */
        public var price: kotlin.String
          @JvmName("getPrice")
          get() = _builder.getPrice()
          @JvmName("setPrice")
          set(value) {
            _builder.setPrice(value)
          }
        /**
         * <code>string price = 8 [json_name = "price"];</code>
         */
        public fun clearPrice() {
          _builder.clearPrice()
        }

        /**
         * <code>string owner = 5 [json_name = "owner"];</code>
         */
        public var owner: kotlin.String
          @JvmName("getOwner")
          get() = _builder.getOwner()
          @JvmName("setOwner")
          set(value) {
            _builder.setOwner(value)
          }
        /**
         * <code>string owner = 5 [json_name = "owner"];</code>
         */
        public fun clearOwner() {
          _builder.clearOwner()
        }

        /**
         * <code>uint64 height = 6 [json_name = "height"];</code>
         */
        public var height: kotlin.Long
          @JvmName("getHeight")
          get() = _builder.getHeight()
          @JvmName("setHeight")
          set(value) {
            _builder.setHeight(value)
          }
        /**
         * <code>uint64 height = 6 [json_name = "height"];</code>
         */
        public fun clearHeight() {
          _builder.clearHeight()
        }
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun counters.minter.grpc.client.SwapPoolsResponse.copy(block: counters.minter.grpc.client.SwapPoolsResponseKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse =
  counters.minter.grpc.client.SwapPoolsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
public inline fun counters.minter.grpc.client.SwapPoolsResponse.SwapPool.copy(block: counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse.SwapPool =
  counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
public inline fun counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder.copy(block: counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.LimitOrderKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.SwapPoolsResponse.SwapPool.LimitOrder =
  counters.minter.grpc.client.SwapPoolsResponseKt.SwapPoolKt.LimitOrderKt.Dsl._create(this.toBuilder()).apply { block() }._build()
