//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package counters.minter.grpc.client;

@kotlin.jvm.JvmSynthetic
inline fun coin(block: counters.minter.grpc.client.CoinKt.Dsl.() -> Unit): counters.minter.grpc.client.Coin =
  counters.minter.grpc.client.CoinKt.Dsl._create(counters.minter.grpc.client.Coin.newBuilder()).apply { block() }._build()
object CoinKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: counters.minter.grpc.client.Coin.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: counters.minter.grpc.client.Coin.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): counters.minter.grpc.client.Coin = _builder.build()

    /**
     * <pre>
     *    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
     *example: "{&#92;"id&#92;": &#92;"0&#92;", &#92;"symbol&#92;": &#92;"BIP&#92;"}"
     *};
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     *    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
     *example: "{&#92;"id&#92;": &#92;"0&#92;", &#92;"symbol&#92;": &#92;"BIP&#92;"}"
     *};
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>string symbol = 2;</code>
     */
    var symbol: kotlin.String
      @JvmName("getSymbol")
      get() = _builder.getSymbol()
      @JvmName("setSymbol")
      set(value) {
        _builder.setSymbol(value)
      }
    /**
     * <code>string symbol = 2;</code>
     */
    fun clearSymbol() {
      _builder.clearSymbol()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun counters.minter.grpc.client.Coin.copy(block: counters.minter.grpc.client.CoinKt.Dsl.() -> Unit): counters.minter.grpc.client.Coin =
  counters.minter.grpc.client.CoinKt.Dsl._create(this.toBuilder()).apply { block() }._build()
