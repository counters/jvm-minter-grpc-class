//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: data.proto

package counters.minter.grpc.client;

@kotlin.jvm.JvmSynthetic
inline fun addLiquidityData(block: counters.minter.grpc.client.AddLiquidityDataKt.Dsl.() -> Unit): counters.minter.grpc.client.AddLiquidityData =
  counters.minter.grpc.client.AddLiquidityDataKt.Dsl._create(counters.minter.grpc.client.AddLiquidityData.newBuilder()).apply { block() }._build()
object AddLiquidityDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: counters.minter.grpc.client.AddLiquidityData.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: counters.minter.grpc.client.AddLiquidityData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): counters.minter.grpc.client.AddLiquidityData = _builder.build()

    /**
     * <code>.api_pb.Coin coin0 = 1;</code>
     */
    var coin0: counters.minter.grpc.client.Coin
      @JvmName("getCoin0")
      get() = _builder.getCoin0()
      @JvmName("setCoin0")
      set(value) {
        _builder.setCoin0(value)
      }
    /**
     * <code>.api_pb.Coin coin0 = 1;</code>
     */
    fun clearCoin0() {
      _builder.clearCoin0()
    }
    /**
     * <code>.api_pb.Coin coin0 = 1;</code>
     * @return Whether the coin0 field is set.
     */
    fun hasCoin0(): kotlin.Boolean {
      return _builder.hasCoin0()
    }

    /**
     * <code>.api_pb.Coin coin1 = 2;</code>
     */
    var coin1: counters.minter.grpc.client.Coin
      @JvmName("getCoin1")
      get() = _builder.getCoin1()
      @JvmName("setCoin1")
      set(value) {
        _builder.setCoin1(value)
      }
    /**
     * <code>.api_pb.Coin coin1 = 2;</code>
     */
    fun clearCoin1() {
      _builder.clearCoin1()
    }
    /**
     * <code>.api_pb.Coin coin1 = 2;</code>
     * @return Whether the coin1 field is set.
     */
    fun hasCoin1(): kotlin.Boolean {
      return _builder.hasCoin1()
    }

    /**
     * <code>string volume0 = 3;</code>
     */
    var volume0: kotlin.String
      @JvmName("getVolume0")
      get() = _builder.getVolume0()
      @JvmName("setVolume0")
      set(value) {
        _builder.setVolume0(value)
      }
    /**
     * <code>string volume0 = 3;</code>
     */
    fun clearVolume0() {
      _builder.clearVolume0()
    }

    /**
     * <code>string maximum_volume1 = 4;</code>
     */
    var maximumVolume1: kotlin.String
      @JvmName("getMaximumVolume1")
      get() = _builder.getMaximumVolume1()
      @JvmName("setMaximumVolume1")
      set(value) {
        _builder.setMaximumVolume1(value)
      }
    /**
     * <code>string maximum_volume1 = 4;</code>
     */
    fun clearMaximumVolume1() {
      _builder.clearMaximumVolume1()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun counters.minter.grpc.client.AddLiquidityData.copy(block: counters.minter.grpc.client.AddLiquidityDataKt.Dsl.() -> Unit): counters.minter.grpc.client.AddLiquidityData =
  counters.minter.grpc.client.AddLiquidityDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()
