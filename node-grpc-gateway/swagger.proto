syntax = "proto3";

package api_pb;

option go_package = "github.com/MinterTeam/node-grpc-gateway/gen/go;api_pb";

import "protoc-gen-openapiv2/options/annotations.proto";

message ErrorBody {
    message Error {
        string code = 1;
        string message = 2;
        map<string,string> data = 3;
    }
    Error error = 1;
}

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Minter Node API v2"
        license: {
            name: "MIT"
            url: 'https://github.com/MinterTeam/minter-go-node/blob/master/LICENSE'
        };
        version: "1.5.0"
        contact: {
            name: "Minter gRPC-Gateway"
            url: "https://github.com/MinterTeam/node-grpc-gateway"
            email: "sk@minter.org"
        };
    };
    base_path: "/v2"
    external_docs: {
        url: "https://www.minter.network/docs";
        description: "More about Minter blockchain";
    }
    consumes: "application/json"
    produces: "application/json"
    responses: {
        key: "default"
        value: {
            description: "An unexpected error response."
            schema: {
                json_schema: {
                    ref: ".api_pb.ErrorBody"
                };
                example: "{\"error\": {\"code\": \"504\", \"message\": \"context deadline exceeded\", \"data\": {\"operation\":\"ABC\"}}}"
            };
        };
    };
};

