// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources.proto

package counters.minter.grpc.client;

public interface CandidateResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api_pb.CandidateResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint64 id = 14 [json_name = "id"];</code>
   * @return The id.
   */
  long getId();

  /**
   * <pre>
   * Address where validator’s rewards go to.
   * </pre>
   *
   * <code>string reward_address = 1 [json_name = "rewardAddress"];</code>
   * @return The rewardAddress.
   */
  java.lang.String getRewardAddress();
  /**
   * <pre>
   * Address where validator’s rewards go to.
   * </pre>
   *
   * <code>string reward_address = 1 [json_name = "rewardAddress"];</code>
   * @return The bytes for rewardAddress.
   */
  com.google.protobuf.ByteString
      getRewardAddressBytes();

  /**
   * <pre>
   * Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction. It also enables the owner to edit the node by sending EditCandidate.
   * </pre>
   *
   * <code>string owner_address = 10 [json_name = "ownerAddress"];</code>
   * @return The ownerAddress.
   */
  java.lang.String getOwnerAddress();
  /**
   * <pre>
   * Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction. It also enables the owner to edit the node by sending EditCandidate.
   * </pre>
   *
   * <code>string owner_address = 10 [json_name = "ownerAddress"];</code>
   * @return The bytes for ownerAddress.
   */
  com.google.protobuf.ByteString
      getOwnerAddressBytes();

  /**
   * <pre>
   * Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction.
   * </pre>
   *
   * <code>string control_address = 11 [json_name = "controlAddress"];</code>
   * @return The controlAddress.
   */
  java.lang.String getControlAddress();
  /**
   * <pre>
   * Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction.
   * </pre>
   *
   * <code>string control_address = 11 [json_name = "controlAddress"];</code>
   * @return The bytes for controlAddress.
   */
  com.google.protobuf.ByteString
      getControlAddressBytes();

  /**
   * <pre>
   * Total stake of a candidate
   * </pre>
   *
   * <code>string total_stake = 2 [json_name = "totalStake"];</code>
   * @return The totalStake.
   */
  java.lang.String getTotalStake();
  /**
   * <pre>
   * Total stake of a candidate
   * </pre>
   *
   * <code>string total_stake = 2 [json_name = "totalStake"];</code>
   * @return The bytes for totalStake.
   */
  com.google.protobuf.ByteString
      getTotalStakeBytes();

  /**
   * <pre>
   * Public key of a candidate
   * </pre>
   *
   * <code>string public_key = 3 [json_name = "publicKey"];</code>
   * @return The publicKey.
   */
  java.lang.String getPublicKey();
  /**
   * <pre>
   * Public key of a candidate
   * </pre>
   *
   * <code>string public_key = 3 [json_name = "publicKey"];</code>
   * @return The bytes for publicKey.
   */
  com.google.protobuf.ByteString
      getPublicKeyBytes();

  /**
   * <pre>
   * Commission (from 0 to 100) from rewards which delegators will pay to validator
   * </pre>
   *
   * <code>uint64 commission = 4 [json_name = "commission"];</code>
   * @return The commission.
   */
  long getCommission();

  /**
   * <pre>
   * Number of occupied steak slots. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value used_slots = 7 [json_name = "usedSlots"];</code>
   * @return Whether the usedSlots field is set.
   */
  boolean hasUsedSlots();
  /**
   * <pre>
   * Number of occupied steak slots. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value used_slots = 7 [json_name = "usedSlots"];</code>
   * @return The usedSlots.
   */
  com.google.protobuf.UInt64Value getUsedSlots();
  /**
   * <pre>
   * Number of occupied steak slots. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value used_slots = 7 [json_name = "usedSlots"];</code>
   */
  com.google.protobuf.UInt64ValueOrBuilder getUsedSlotsOrBuilder();

  /**
   * <pre>
   * Number of unique wallets in steaks. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value uniq_users = 8 [json_name = "uniqUsers"];</code>
   * @return Whether the uniqUsers field is set.
   */
  boolean hasUniqUsers();
  /**
   * <pre>
   * Number of unique wallets in steaks. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value uniq_users = 8 [json_name = "uniqUsers"];</code>
   * @return The uniqUsers.
   */
  com.google.protobuf.UInt64Value getUniqUsers();
  /**
   * <pre>
   * Number of unique wallets in steaks. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value uniq_users = 8 [json_name = "uniqUsers"];</code>
   */
  com.google.protobuf.UInt64ValueOrBuilder getUniqUsersOrBuilder();

  /**
   * <pre>
   * Smallest steak size. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.StringValue min_stake = 9 [json_name = "minStake"];</code>
   * @return Whether the minStake field is set.
   */
  boolean hasMinStake();
  /**
   * <pre>
   * Smallest steak size. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.StringValue min_stake = 9 [json_name = "minStake"];</code>
   * @return The minStake.
   */
  com.google.protobuf.StringValue getMinStake();
  /**
   * <pre>
   * Smallest steak size. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>.google.protobuf.StringValue min_stake = 9 [json_name = "minStake"];</code>
   */
  com.google.protobuf.StringValueOrBuilder getMinStakeOrBuilder();

  /**
   * <pre>
   * List of stakes. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>repeated .api_pb.CandidateResponse.Stake stakes = 5 [json_name = "stakes"];</code>
   */
  java.util.List<counters.minter.grpc.client.CandidateResponse.Stake> 
      getStakesList();
  /**
   * <pre>
   * List of stakes. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>repeated .api_pb.CandidateResponse.Stake stakes = 5 [json_name = "stakes"];</code>
   */
  counters.minter.grpc.client.CandidateResponse.Stake getStakes(int index);
  /**
   * <pre>
   * List of stakes. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>repeated .api_pb.CandidateResponse.Stake stakes = 5 [json_name = "stakes"];</code>
   */
  int getStakesCount();
  /**
   * <pre>
   * List of stakes. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>repeated .api_pb.CandidateResponse.Stake stakes = 5 [json_name = "stakes"];</code>
   */
  java.util.List<? extends counters.minter.grpc.client.CandidateResponse.StakeOrBuilder> 
      getStakesOrBuilderList();
  /**
   * <pre>
   * List of stakes. Note: filled in when request includes_stakes
   * </pre>
   *
   * <code>repeated .api_pb.CandidateResponse.Stake stakes = 5 [json_name = "stakes"];</code>
   */
  counters.minter.grpc.client.CandidateResponse.StakeOrBuilder getStakesOrBuilder(
      int index);

  /**
   * <pre>
   * Candidate status. Available values: offline = 1, online = 2
   * </pre>
   *
   * <code>uint64 status = 6 [json_name = "status"];</code>
   * @return The status.
   */
  long getStatus();

  /**
   * <pre>
   * Is a validator at the current height
   * </pre>
   *
   * <code>bool validator = 12 [json_name = "validator"];</code>
   * @return The validator.
   */
  boolean getValidator();

  /**
   * <code>uint64 jailed_until = 13 [json_name = "jailedUntil"];</code>
   * @return The jailedUntil.
   */
  long getJailedUntil();
}
