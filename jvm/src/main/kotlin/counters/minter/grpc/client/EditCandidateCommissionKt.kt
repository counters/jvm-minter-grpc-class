//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: data.proto

package counters.minter.grpc.client;

@kotlin.jvm.JvmSynthetic
public inline fun editCandidateCommission(block: counters.minter.grpc.client.EditCandidateCommissionKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.EditCandidateCommission =
  counters.minter.grpc.client.EditCandidateCommissionKt.Dsl._create(counters.minter.grpc.client.EditCandidateCommission.newBuilder()).apply { block() }._build()
public object EditCandidateCommissionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: counters.minter.grpc.client.EditCandidateCommission.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: counters.minter.grpc.client.EditCandidateCommission.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): counters.minter.grpc.client.EditCandidateCommission = _builder.build()

    /**
     * <code>string pub_key = 1 [json_name = "pubKey"];</code>
     */
    public var pubKey: kotlin.String
      @JvmName("getPubKey")
      get() = _builder.getPubKey()
      @JvmName("setPubKey")
      set(value) {
        _builder.setPubKey(value)
      }
    /**
     * <code>string pub_key = 1 [json_name = "pubKey"];</code>
     */
    public fun clearPubKey() {
      _builder.clearPubKey()
    }

    /**
     * <code>uint64 commission = 2 [json_name = "commission"];</code>
     */
    public var commission: kotlin.Long
      @JvmName("getCommission")
      get() = _builder.getCommission()
      @JvmName("setCommission")
      set(value) {
        _builder.setCommission(value)
      }
    /**
     * <code>uint64 commission = 2 [json_name = "commission"];</code>
     */
    public fun clearCommission() {
      _builder.clearCommission()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun counters.minter.grpc.client.EditCandidateCommission.copy(block: counters.minter.grpc.client.EditCandidateCommissionKt.Dsl.() -> kotlin.Unit): counters.minter.grpc.client.EditCandidateCommission =
  counters.minter.grpc.client.EditCandidateCommissionKt.Dsl._create(this.toBuilder()).apply { block() }._build()
