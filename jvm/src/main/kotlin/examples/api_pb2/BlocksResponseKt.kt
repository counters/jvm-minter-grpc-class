//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package examples.api_pb2;

@kotlin.jvm.JvmSynthetic
public inline fun blocksResponse(block: examples.api_pb2.BlocksResponseKt.Dsl.() -> kotlin.Unit): examples.api_pb2.BlocksResponse =
  examples.api_pb2.BlocksResponseKt.Dsl._create(examples.api_pb2.BlocksResponse.newBuilder()).apply { block() }._build()
public object BlocksResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: examples.api_pb2.BlocksResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: examples.api_pb2.BlocksResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): examples.api_pb2.BlocksResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BlocksProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     */
     public val blocks: com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBlocksList()
      )
    /**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     * @param value The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBlocks")
    public fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.add(value: examples.api_pb2.BlockResponse) {
      _builder.addBlocks(value)
    }/**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     * @param value The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBlocks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.plusAssign(value: examples.api_pb2.BlockResponse) {
      add(value)
    }/**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     * @param values The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBlocks")
    public fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.addAll(values: kotlin.collections.Iterable<examples.api_pb2.BlockResponse>) {
      _builder.addAllBlocks(values)
    }/**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     * @param values The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBlocks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.plusAssign(values: kotlin.collections.Iterable<examples.api_pb2.BlockResponse>) {
      addAll(values)
    }/**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     * @param index The index to set the value at.
     * @param value The blocks to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBlocks")
    public operator fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.set(index: kotlin.Int, value: examples.api_pb2.BlockResponse) {
      _builder.setBlocks(index, value)
    }/**
     * <code>repeated .api_pb.BlockResponse blocks = 1 [json_name = "blocks"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBlocks")
    public fun com.google.protobuf.kotlin.DslList<examples.api_pb2.BlockResponse, BlocksProxy>.clear() {
      _builder.clearBlocks()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun examples.api_pb2.BlocksResponse.copy(block: examples.api_pb2.BlocksResponseKt.Dsl.() -> kotlin.Unit): examples.api_pb2.BlocksResponse =
  examples.api_pb2.BlocksResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
